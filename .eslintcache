[{"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/index.js":"1","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/reportWebVitals.js":"2","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/App.js":"3","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/utils/numModifiers.js":"4","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/contexts/context.js":"5","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/utils/stringModifiers.js":"6","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/Nav.js":"7","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/AboutContainer.js":"8","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/ContentContainer.js":"9","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/DataComponent.js":"10","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/SideControlls.js":"11","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/GraphContainer.js":"12","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/GraphComponent.js":"13"},{"size":500,"mtime":1606951120857,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1606951120857,"results":"16","hashOfConfig":"15"},{"size":5953,"mtime":1607483921132,"results":"17","hashOfConfig":"15"},{"size":1449,"mtime":1607117462451,"results":"18","hashOfConfig":"15"},{"size":77,"mtime":1606969719892,"results":"19","hashOfConfig":"15"},{"size":1598,"mtime":1607030938654,"results":"20","hashOfConfig":"15"},{"size":357,"mtime":1607405964465,"results":"21","hashOfConfig":"15"},{"size":138,"mtime":1607033103303,"results":"22","hashOfConfig":"15"},{"size":5123,"mtime":1607492134394,"results":"23","hashOfConfig":"15"},{"size":1964,"mtime":1607491683699,"results":"24","hashOfConfig":"15"},{"size":2614,"mtime":1607481257414,"results":"25","hashOfConfig":"15"},{"size":11393,"mtime":1607576854756,"results":"26","hashOfConfig":"15"},{"size":6535,"mtime":1607577469409,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qct18r",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/index.js",[],["58","59"],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/reportWebVitals.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/App.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/utils/numModifiers.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/contexts/context.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/utils/stringModifiers.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/Nav.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/AboutContainer.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/ContentContainer.js",["60","61","62","63","64","65","66","67","68"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Context } from '../contexts/context'\n\nimport {\n    abbreviateNum,\n    commafyNum,\n  } from '../utils/numModifiers'\n\nimport SideControlls from './SideControlls'\nimport DataComponent from './DataComponent'\n\nconst ContentContainer = (props) => {\n    \n\n    const { countriesData, statesData, currentLocationType, filterString, sortMethod } = useContext(Context)\n    const [countries, setCountries] = countriesData\n    const [states, setStates] = statesData\n\n    //modifiers for display data (controlled by SideControlls.js)\n    const [locationType, setLocationType] = currentLocationType\n    const [filterStr, setFilterStr] = filterString\n    const [sort, setSort] = sortMethod\n\n    //modified data to display\n    const [dataSet, setDataSet] = useState(countries)\n    const [searched, setSearched] = useState(dataSet)\n    const [sorted, setSorted] = useState(dataSet)\n\n    const [graphOpen, setGraphOpen] = useState(false)\n    const [graphOwner, setGraphOwner] = useState('')\n\n    useEffect(() => {\n        setSearched(dataSet)\n    }, [dataSet])\n    \n\n    useEffect(() => {\n        if (locationType === 'countries'){\n            setDataSet(countries)\n        } else {\n            setDataSet(states)\n        }\n    }, [locationType, countries, states])\n\n\n    useEffect(() => {\n        const filteredData = dataSet.filter(location => {\n            return location.locationName.toLowerCase().includes(filterStr.toLowerCase())\n        })\n        setSearched(filteredData)\n    }, [filterStr])\n    \n    useEffect(() => {\n        if(sort[1] === 'alphabetical'){\n            setSearched(searched.sort((a, b) => {\n                return a.locationName.localeCompare(b.locationName)\n            }))\n        }\n        if(sort[1] === 'cases'){\n            setSearched(searched.sort((a, b) => {\n                return a.totalCases - b.totalCases\n            }))\n        }\n        if(sort[1] === 'deaths'){\n            setSearched(searched.sort((a, b) => {\n                return a.totalDeaths - b.totalDeaths\n            }))\n        }\n        if(sort[1] === 'cases/mil'){\n            setSearched(searched.sort((a, b) => {\n                return a.casesPerMil - b.casesPerMil\n            }))\n        }\n        if(sort[1] === 'deaths/mil'){\n            setSearched(searched.sort((a, b) => {\n                return a.deathsPerMil - b.deathsPerMil\n            }))\n        }\n        if(sort[1] === 'deathRate'){\n            setSearched(searched.sort((a, b) => {\n                return a.deathRate - b.deathRate\n            }))\n        }\n        if(sort[0] === 'high-low'){\n            setSearched(searched.reverse())\n        }\n        \n    },[sort])\n\n    return(\n        <div className='content-container'>\n            <SideControlls/>\n            <div className='outer-container labels'>\n                <div className='items-container column-labels'>\n                    <p className='name-item'>Location</p>\n                    <div className='other-items'>\n                        <p className='row-item'>Cases</p>\n                        <p className='row-item'>Deaths</p>\n                        <p className='row-item'>Cases/Mil</p>\n                        <p className='row-item'>Deaths/Mil</p>\n                        <p className='row-item'>Death Rate</p>\n                    </div>\n                </div>\n            </div>\n                \n            \n            {searched.map((location,index) => {\n                if (graphOwner === location.locationName){\n                    return <DataComponent \n                        key={location.locationName} \n                        locationName={location.locationName} \n                        locationType={location.locationType}\n                        totalCases={commafyNum(location.totalCases)}\n                        totalDeaths={commafyNum(location.totalDeaths)}\n                        casesPerMil={abbreviateNum(location.casesPerMil)}\n                        deathsPerMil={abbreviateNum(location.deathsPerMil)}\n                        deathRate={location.deathRate}\n                        abbreviation={location.abbreviation}\n                        graphOpen={graphOpen}\n                        setGraphOpen={setGraphOpen}\n                        setGraphOwner={setGraphOwner}\n                        />\n                }\n                return <DataComponent \n                key={location.locationName} \n                locationName={location.locationName} \n                locationType={location.locationType}\n                totalCases={commafyNum(location.totalCases)}\n                totalDeaths={commafyNum(location.totalDeaths)}\n                casesPerMil={abbreviateNum(location.casesPerMil)}\n                deathsPerMil={abbreviateNum(location.deathsPerMil)}\n                deathRate={location.deathRate}\n                abbreviation={location.abbreviation}\n                graphOpen={false}\n                setGraphOpen={setGraphOpen}\n                setGraphOwner={setGraphOwner}\n                />\n                \n            })}\n        </div>\n    )\n}\n\nexport default ContentContainer","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/DataComponent.js",["69","70"],"import React, { useState } from 'react'\nimport GraphContainer from './GraphContainer'\n\nconst DataComponent = (props) => {\n    \n    const [graphOpen, setGraphOpen] = useState(false)\n\n    const toggleGraph = () => {\n        if(props.graphOpen){\n            props.setGraphOpen(false)\n        } else {\n            props.setGraphOpen(true)\n            props.setGraphOwner(props.locationName)\n        }\n    }\n\n    if(props.graphOpen){\n        return (\n        <div className='outer-container'>\n            <div onClick={toggleGraph} className='items-container'>\n                <p className='name-item'>{props.locationName}</p>\n                <div className='other-items'>\n                    <p className='row-item'>{props.totalCases}</p>\n                    <p className='row-item'>{props.totalDeaths}</p>\n                    <p className='row-item'>{props.casesPerMil}</p>\n                    <p className='row-item'>{props.deathsPerMil}</p>\n                    <p className='row-item'>{props.deathRate}%</p>\n                </div>\n            </div>        \n                \n                <GraphContainer \n                    abbreviation={props.abbreviation} \n                    locationType={props.locationType}\n                    locationName={props.locationName}\n                />\n            \n        </div>\n        \n        )\n    }\n\n    return(\n    <div className='outer-container'>\n        <div onClick={toggleGraph} className='items-container'>\n            <p className='name-item'>{props.locationName}</p>\n            <div className='other-items'>\n                <p className='row-item'>{props.totalCases}</p>\n                <p className='row-item'>{props.totalDeaths}</p>\n                <p className='row-item'>{props.casesPerMil}</p>\n                <p className='row-item'>{props.deathsPerMil}</p>\n                <p className='row-item'>{props.deathRate}%</p>\n            </div>\n        </div>  \n    </div>\n    )\n}\n\nexport default DataComponent","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/SideControlls.js",["71","72","73","74","75"],"import React, { useContext, useEffect, useLayoutEffect, useState } from 'react'\nimport { Context } from '../contexts/context'\n\n\nconst SideControlls = () => {\n\n    const { currentLocationType, clipBoard, filterString, sortMethod } = useContext(Context)\n    const [locationType, setLocationType] = currentLocationType\n    const [filterStr, setFilterStr] = filterString\n    const [sort, setSort] = sortMethod\n\n    const [clipBoardData, setClipBoardData] = clipBoard\n\n    const [sortOrder, setSortOrder] = useState('low-high')\n    const [sortBy, setSortBy] = useState('alphabetical')\n\n    const [clipBoardDisplay, setClipBoardDisplay] = useState({\n        cases:[{locationName: '', x: new Date(), y:0}],\n        deaths: [{locationName: '', x: new Date(), y:0}]\n      })\n\n    const selectLocationType = (e) => {\n        setLocationType(e.target.value)\n        setFilterStr('')\n    }\n\n    const setFilterString = (e) => {\n        setFilterStr(e.target.value)\n    }\n\n    const changeSortBy = (e) => {\n        setSortBy(e.target.value)\n    }\n\n    const changeSortOrder = (e) => {\n        setSortOrder(e.target.value)\n    }\n\n    useEffect(() => {\n        setSort([sortOrder, sortBy])\n    }, [...sort, sortBy, sortOrder])\n\n    useEffect(() => {\n        setClipBoardDisplay(clipBoardData)\n    },[clipBoardData])\n\n    return(\n        <div className=\"side-controlls\">\n            <input \n                type=\"text\"\n                placeholder=\"Search\"\n                value={filterStr}\n                onChange={setFilterString}\n            />\n            <p>Location Type</p>\n            <select onChange={selectLocationType}> \n                <option value='countries'>Countries</option>\n                <option value='states'>States</option>\n            </select>\n            <p>Sort By</p>\n            <select onChange={changeSortBy}>\n                <option value='alphabetical'>Alphabetical</option>\n                <option value='cases'>Cases</option>\n                <option value='deaths'>Deaths</option>\n                <option value='cases/mil'>Cases/Mil</option>\n                <option value='deaths/mil'>Deaths/Mil</option>\n                <option value='deathRate'>Death Rate</option>\n            </select>\n            <p>Sort Order</p>\n            <select onChange={changeSortOrder}>\n                <option value='low-high'>Low to High</option>\n                <option value='high-low'>High to Low</option>\n            </select>\n        \n            <p>Clipboard: <span className='clipboard'>{clipBoardDisplay.cases[0].locationName}</span></p>\n            \n        </div>\n    )\n}\n\nexport default SideControlls","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/GraphContainer.js",["76"],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/GraphComponent.js",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":16,"column":23,"nodeType":"84","messageId":"85","endLine":16,"endColumn":35},{"ruleId":"82","severity":1,"message":"86","line":17,"column":20,"nodeType":"84","messageId":"85","endLine":17,"endColumn":29},{"ruleId":"82","severity":1,"message":"87","line":20,"column":26,"nodeType":"84","messageId":"85","endLine":20,"endColumn":41},{"ruleId":"82","severity":1,"message":"88","line":21,"column":23,"nodeType":"84","messageId":"85","endLine":21,"endColumn":35},{"ruleId":"82","severity":1,"message":"89","line":22,"column":18,"nodeType":"84","messageId":"85","endLine":22,"endColumn":25},{"ruleId":"82","severity":1,"message":"90","line":27,"column":12,"nodeType":"84","messageId":"85","endLine":27,"endColumn":18},{"ruleId":"82","severity":1,"message":"91","line":27,"column":20,"nodeType":"84","messageId":"85","endLine":27,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":51,"column":8,"nodeType":"94","endLine":51,"endColumn":19,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":88,"column":7,"nodeType":"94","endLine":88,"endColumn":13,"suggestions":"97"},{"ruleId":"82","severity":1,"message":"98","line":6,"column":12,"nodeType":"84","messageId":"85","endLine":6,"endColumn":21},{"ruleId":"82","severity":1,"message":"99","line":6,"column":23,"nodeType":"84","messageId":"85","endLine":6,"endColumn":35},{"ruleId":"82","severity":1,"message":"100","line":1,"column":40,"nodeType":"84","messageId":"85","endLine":1,"endColumn":55},{"ruleId":"82","severity":1,"message":"101","line":8,"column":12,"nodeType":"84","messageId":"85","endLine":8,"endColumn":24},{"ruleId":"82","severity":1,"message":"102","line":12,"column":27,"nodeType":"84","messageId":"85","endLine":12,"endColumn":43},{"ruleId":"92","severity":1,"message":"103","line":41,"column":8,"nodeType":"94","endLine":41,"endColumn":36,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"105","line":41,"column":9,"nodeType":"106","endLine":41,"endColumn":16},{"ruleId":"92","severity":1,"message":"107","line":139,"column":7,"nodeType":"94","endLine":139,"endColumn":9,"suggestions":"108"},{"ruleId":"82","severity":1,"message":"109","line":5,"column":7,"nodeType":"84","messageId":"85","endLine":5,"endColumn":34},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'setCountries' is assigned a value but never used.","Identifier","unusedVar","'setStates' is assigned a value but never used.","'setLocationType' is assigned a value but never used.","'setFilterStr' is assigned a value but never used.","'setSort' is assigned a value but never used.","'sorted' is assigned a value but never used.","'setSorted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataSet'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook useEffect has a missing dependency: 'searched'. Either include it or remove the dependency array. You can also do a functional update 'setSearched(s => ...)' if you only need 'searched' in the 'setSearched' call.",["113"],"'graphOpen' is assigned a value but never used.","'setGraphOpen' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'locationType' is assigned a value but never used.","'setClipBoardData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSort'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","React Hook useEffect has missing dependencies: 'graphCountriesStore', 'graphStatesStore', 'props.abbreviation', 'props.locationName', 'props.locationType', 'setGraphCountriesStore', and 'setGraphStatesStore'. Either include them or remove the dependency array. If 'setCurrentGraphData' needs the current value of 'props.abbreviation', you can also switch to useReducer instead of useState and read 'props.abbreviation' in the reducer.",["115"],"'VictoryZoomVoronoiContainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [dataSet, filterStr]",{"range":"124","text":"125"},"Update the dependencies array to be: [searched, sort]",{"range":"126","text":"127"},"Update the dependencies array to be: [setSort, sortBy, sortOrder]",{"range":"128","text":"129"},"Update the dependencies array to be: [graphCountriesStore, graphStatesStore, props.abbreviation, props.locationName, props.locationType, setGraphCountriesStore, setGraphStatesStore]",{"range":"130","text":"131"},[1542,1553],"[dataSet, filterStr]",[2691,2697],"[searched, sort]",[1182,1210],"[setSort, sortBy, sortOrder]",[7583,7585],"[graphCountriesStore, graphStatesStore, props.abbreviation, props.locationName, props.locationType, setGraphCountriesStore, setGraphStatesStore]"]
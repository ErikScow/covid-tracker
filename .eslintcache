[{"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/index.js":"1","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/reportWebVitals.js":"2","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/App.js":"3","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/contexts/context.js":"4","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/Nav.js":"5","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/utils/stringModifiers.js":"6","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/AboutContainer.js":"7","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/utils/numModifiers.js":"8","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/ContentContainer.js":"9","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/SideControlls.js":"10","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/DataComponent.js":"11","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/GraphContainer.js":"12","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/GraphComponent.js":"13"},{"size":500,"mtime":1606951120857,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1606951120857,"results":"16","hashOfConfig":"15"},{"size":5946,"mtime":1607136813030,"results":"17","hashOfConfig":"15"},{"size":77,"mtime":1606969719892,"results":"18","hashOfConfig":"15"},{"size":357,"mtime":1607034851898,"results":"19","hashOfConfig":"15"},{"size":1598,"mtime":1607030938654,"results":"20","hashOfConfig":"15"},{"size":138,"mtime":1607033103303,"results":"21","hashOfConfig":"15"},{"size":1449,"mtime":1607117462451,"results":"22","hashOfConfig":"15"},{"size":2223,"mtime":1607129672241,"results":"23","hashOfConfig":"15"},{"size":783,"mtime":1607136852729,"results":"24","hashOfConfig":"15"},{"size":1910,"mtime":1607120270013,"results":"25","hashOfConfig":"15"},{"size":8820,"mtime":1607143684910,"results":"26","hashOfConfig":"15"},{"size":6669,"mtime":1607142813201,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qct18r",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/index.js",[],["57","58"],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/reportWebVitals.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/App.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/contexts/context.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/Nav.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/utils/stringModifiers.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/AboutContainer.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/utils/numModifiers.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/ContentContainer.js",["59","60","61"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Context } from '../contexts/context'\n\nimport SideControlls from './SideControlls'\nimport DataComponent from './DataComponent'\n\nconst ContentContainer = (props) => {\n    \n\n    const { countriesData, statesData, currentLocationType } = useContext(Context)\n    const [countriesDisplay, setCountriesDisplay] = countriesData\n    const [statesDisplay, setStatesDisplay] = statesData\n    const [locationType, setLocationType] = currentLocationType\n\n    const [displayData, setDisplayData] = useState(countriesDisplay)\n\n    useEffect(() => {\n        if (locationType === 'countries'){\n            setDisplayData(countriesDisplay)\n        } else {\n            setDisplayData(statesDisplay)\n        }\n    }, [locationType, countriesDisplay, statesDisplay])\n\n    \n\n    return(\n        <div className='content-container'>\n            <SideControlls/>\n            <div className='container'>\n                <div className='columns'>\n                    <p className='name-row'>Location</p>\n                    <div className='other-rows'>\n                        <p className='row-item'>Cases</p>\n                        <p className='row-item'>Deaths</p>\n                        <p className='row-item'>Cases/Mil</p>\n                        <p className='row-item'>Deaths/Mil</p>\n                        <p className='row-item'>Death Rate</p>\n                    </div>\n                   \n                </div>\n            </div>\n            \n            {displayData.map((location,index) => {\n                return <DataComponent \n                        key={location.locationName} \n                        locationName={location.locationName} \n                        locationType={location.locationType}\n                        totalCases={location.totalCases}\n                        totalDeaths={location.totalDeaths}\n                        casesPerMil={location.casesPerMil}\n                        deathsPerMil={location.deathsPerMil}\n                        deathRate={location.deathRate}\n                        abbreviation={location.abbreviation}\n\n                        />\n            })}\n        </div>\n    )\n}\n\nexport default ContentContainer","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/SideControlls.js",["62"],"import React, { useContext } from 'react'\nimport { Context } from '../contexts/context'\n\n\nconst SideControlls = () => {\n\n    const { currentLocationType, clipBoard} = useContext(Context)\n    const [locationType, setLocationType] = currentLocationType\n    const [clipBoardData, setClipBoardData] = clipBoard\n\n    const toggleLocationType = () => {\n        if (locationType === 'countries'){\n            setLocationType('states')\n        } else {\n            setLocationType('countries')\n        }\n    }\n\n    return(\n        <div className=\"side-controlls\">\n            <button onClick={toggleLocationType}>Location Type</button>\n            <p>Clipboard: <span className='clipboard'>{clipBoardData.cases[0].locationName}</span></p>\n        </div>\n    )\n}\n\nexport default SideControlls","/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/DataComponent.js",[],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/GraphContainer.js",["63"],"/Users/erikscow/Documents/web-dev/portfolio/covid-tracker/src/components/GraphComponent.js",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":11,"column":30,"nodeType":"71","messageId":"72","endLine":11,"endColumn":49},{"ruleId":"69","severity":1,"message":"73","line":12,"column":27,"nodeType":"71","messageId":"72","endLine":12,"endColumn":43},{"ruleId":"69","severity":1,"message":"74","line":13,"column":26,"nodeType":"71","messageId":"72","endLine":13,"endColumn":41},{"ruleId":"69","severity":1,"message":"75","line":9,"column":27,"nodeType":"71","messageId":"72","endLine":9,"endColumn":43},{"ruleId":"76","severity":1,"message":"77","line":140,"column":7,"nodeType":"78","endLine":140,"endColumn":9,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"80","line":5,"column":7,"nodeType":"71","messageId":"72","endLine":5,"endColumn":34},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'setCountriesDisplay' is assigned a value but never used.","Identifier","unusedVar","'setStatesDisplay' is assigned a value but never used.","'setLocationType' is assigned a value but never used.","'setClipBoardData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'graphCountriesStore', 'graphStatesStore', 'props.abbreviation', 'props.locationName', 'props.locationType', 'setGraphCountriesStore', and 'setGraphStatesStore'. Either include them or remove the dependency array. If 'setCurrentGraphData' needs the current value of 'props.abbreviation', you can also switch to useReducer instead of useState and read 'props.abbreviation' in the reducer.","ArrayExpression",["83"],"'VictoryZoomVoronoiContainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [graphCountriesStore, graphStatesStore, props.abbreviation, props.locationName, props.locationType, setGraphCountriesStore, setGraphStatesStore]",{"range":"86","text":"87"},[7566,7568],"[graphCountriesStore, graphStatesStore, props.abbreviation, props.locationName, props.locationType, setGraphCountriesStore, setGraphStatesStore]"]